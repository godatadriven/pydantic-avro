[tool.poetry]
name = "pydantic-avro"
version = "0.5.1"
description = "Converting pydantic classes to avro schemas"
authors = ["Peter van 't Hof' <peter.vanthof@godatadriven.com>"]

keywords = ["pydantic", "avro"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/godatadriven/pydantic-avro"
repository = "https://github.com/godatadriven/pydantic-avro"
include = [
    "LICENSE",
]


packages = [{ include = "pydantic_avro", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
pydantic = ">=1.4,<3.0"

[tool.poetry.dev-dependencies]
coverage= {version=  "^7.2.2", extras=["toml"]}
pytest= "^7.2.2"
pytest-mock="^3.10.0"
pyproject-flake8 ="^5.0.4"
isort ="^5.10.0"
black="23.3.0"
pytest-cov="^4.0.0"
mypy = "^1.1.1"
avro = "^1.11.0"
fastavro = "^1.4.0"

[tool.poetry.scripts]
pydantic-avro = "pydantic_avro.__main__:root_main"

[tool.black]
line-length = 120
target-version = ["py38"]

[tool.pytest.ini_options]
addopts = "--junitxml=junit/report.xml"
testpaths = ["tests"]
markers = "requires_database: requires postgresql"

[tool.coverage.report]
omit = ["tests/*", ".venv/*"]
precision = 2
show_missing = true

[tool.coverage.run]
command_line = "-m pytest -v tests/"
omit = ["tests/*",".venv/*"]

[tool.flake8]
max-line-length = 180
extend-exclude = ["deploy", ".venv"]
extend-ignore = "E203"

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
files = "src/"
python_version = "3.9"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
